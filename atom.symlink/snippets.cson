# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson


'.source.coffee':
  'Console log':
    'prefix': 'log'
    'body': 'console.log($1)'

'.source.js':
  'Console log':
    'prefix': 'log'
    'body': 'console.log($1);'
  'Console warn':
    'prefix': 'warn'
    'body': 'console.warn($1);'
  'Console error':
    'prefix': 'error'
    'body': 'console.error($1);'
  'Import Module':
    'prefix': 'imp'
    'body': 'import $1 from \'$2\';'
  'Import lodash module':
    'prefix': 'ild'
    'body': "import _$1 from 'lodash/$1';"
  'Export Constant':
    'prefix': 'excon'
    'body': "export const $1 = '$1';"

'.text.html, .text.html .meta.scope.between-tag-pair, .text.html .punctuation.tag.begin':
  'paragraph':
    'prefix': 'p'
    'body': '<p>$1</p>'
